ALGORITHM Overlapping ELTS 1 (first solution)
VAR 
  tab1: ARRAY_OF INTEGER;
  tab2 : ARRAY_OF INTEGER;
  SUM:INTEGER:=0
  i:INTEGER
  j:INTEGER

BEGIN
 READ(tab1[i])
 READ(tab2[j])
FOR i FROM 0 TO tab1.length-1 STEP 1  DO
FOR j FROM 0 TO tab2.lenght-1 STEP 1  DO
 
IF (tab1[i]=tab2[j]) THEN
     SUM=SUM +tab2[j]
 END_IF
END_FOR
END_FOR

FOR j FROM 0 TO tab2.length-1 STEP 1  DO
FOR i FROM 0 TO tab1.lenght-1 STEP 1  DO
 
IF (tab2[j]=tab1[i]) THEN
     SUM=SUM +tab1[i]
END_IF
END_FOR
 END_FOR
write ('SUM is' , SUM)
END






ALGORITHM Overlapping ELTS  2 (second solution)
VAR
 htab : HASH_TABLE <INTEGER, INTEGER>
 arr1: ARRAY_OF INTEGER;
 arr2: ARRAY_OF INTEGER;
 i: INTEGER 
 count : INTEGER:=1
 SUM: INTEGER:= 0
 
 BEGIN
   READ( arr1)
   READ(arr2)
  FOR i FROM 0 TO arr1.length -1 STEP 1  DO
       IF (htab.lookup(arr1[i]) = TRUE) THEN
           count := htab.get(arr1[i]);
           htab.insert(arr1[i],count+1);
       ELSE
           htab.insert(arr1[i],1);
       END_IF
       IF (htab.get(arr1[i]) = 2) THEN
           SUM := SUM + arr1[i]
   END_FOR

   FOR j FROM 0 TO arr2.length -1 STEP 1  DO
       IF (htab.lookup(arr2[j]) = TRUE) THEN
           count := htab.get(arr2[j]);
           htab.insert(arr2[j],count+1);
       ELSE
           htab.insert(arr2[j],1);
       END_IF
       IF (htab.get(arr2[j]) = 2) THEN
           SUM := SUM + arr2[j]
   END_FOR


   Write("Overlaping Elements Sum : " + sum);
END

   